---
- hosts: jenkins_controllers
  remote_user: root
  pre_tasks:
    - name: Install packages
      apt:
        name:
          - curl
          - firewalld
          - openjdk-17-jdk
          - git
        update_cache: yes
    - name: Open ports for HTTP and HTTPS
      firewalld:
        service: "{{ item }}"
        permanent: yes
        immediate: yes
        state: enabled
        zone: public
      loop:
        - http
        - https
        - jenkins
    - name: Set floating ip
      template:
        src: templates/interfaces.j2
        dest: /etc/network/interfaces
    - name: Reload services
      service:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      loop:
        - firewalld
        - networking
    - name: Ensure Jenkins configuration directory exists
      file:
        path: "{{ jenkins_home }}"
        state: directory
    - name: Configure Jenkins
      template:
        src: templates/jenkins.yaml.j2
        dest: "{{ jenkins_home }}/jenkins.yaml"
  post_tasks:
    - name: Disable setup wizard
      jenkins_script:
        script: |
          import static jenkins.model.Jenkins.instance as jenkins
          import jenkins.install.InstallState
          if (!jenkins.installState.isSetupComplete()) {
            InstallState.INITIAL_SETUP_COMPLETED.initializeState()
          }
        user: "{{ jenkins_admin_username }}"
        password: "{{ jenkins_admin_password }}"
    - name: Create .ssh folder for Jenkins user
      become: yes
      become_user: jenkins
      file:
        path: "{{ jenkins_home }}/.ssh"
        state: directory
        mode: '700'
        owner: jenkins
    - name: Add agents to known hosts
      become: yes
      become_user: jenkins
      known_hosts:
        name: "{{ item }}"
        key: "{{ lookup('pipe', 'ssh-keyscan {{ item }}') }}"
      with_items: "{{ groups.jenkins_agents }}"
    - name: Configure git username
      git_config:
        name: user.name
        value: "Matthew Fennell"
        scope: system
    - name: Configure git email
      git_config:
        name: user.email
        value: "matthew.robert.fennell@gmail.com"
        scope: system
  vars:
    user_to_create: "{{ jenkins_user }}"
    jenkins_hostname: "{{ hostname }}"
    jenkins_package_state: latest
    jenkins_plugins_state: latest
    jenkins_options: "--httpKeepAliveTimeout=3600000 --httpsKeepAliveTimeout=3600000"
    jenkins_java_options: "-Djenkins.install.runSetupWizard=false"
    jenkins_admin_username: "{{ admin_username }}"
    jenkins_admin_password: "{{ admin_password }}"
    jenkins_plugins:
      - ssh-slaves
      - git
      - subversion
      - configuration-as-code
      - workflow-job
      - job-dsl
      - workflow-aggregator
      - pipeline-stage-view
    jenkins_plugins_install_dependencies: true
    certbot_create_if_missing: true
    certbot_admin_email: "{{ admin_email }}"
    certbot_certs:
    - domains:
        - "{{ hostname }}"
        - "www.{{ hostname }}"
    nginx_install_from: os_repository
    nginx_vhosts:
      - listen: "443 ssl"
        server_name: "{{ hostname }}"
        extra_parameters: |
          location / {
            include /etc/nginx/proxy_params;
            proxy_pass http://localhost:8080;
            proxy_read_timeout 90s;
            proxy_redirect http://localhost:8080 https://{{ hostname }};
          }
          ssl_certificate /etc/letsencrypt/live/{{ hostname }}/fullchain.pem;
          ssl_certificate_key /etc/letsencrypt/live/{{ hostname }}/privkey.pem;
    swap_file_size_mb: 4096
  roles:
    - role: matthewrfennell.create-user
    - role: geerlingguy.nginx
    - role: geerlingguy.certbot
    - role: geerlingguy.jenkins
    - role: geerlingguy.swap

- hosts: jenkins_agents
  remote_user: root
  post_tasks:
    - name: Generate ssh key for agent
      local_action:
        module: openssh_keypair
        path: "./jenkins_agent"
    - name: Add public key to jenkins agent authorised keys
      authorized_key:
        user: "{{ jenkins_user }}"
        key: "{{ lookup('file', './jenkins_agent.pub') }}"
    - name: Install dependencies
      become: True
      apt:
        name:
          - git
          - openjdk-17-jdk
          - subversion
          - g++
          - build-essential
          - patchelf
          - fuse
          - file
          - cmake
          - libopenscenegraph-dev
          - freeglut3-dev
          - libvorbis-dev
          - libsdl2-dev
          - libopenal-dev
          - libenet-dev
          - libexpat1-dev
          - libjpeg62-turbo-dev
          - libplib-dev
          - libpng-dev
          - libcurl4-openssl-dev
          - libsdl2-dev
          - libsdl2-mixer-dev
          - libgtest-dev
          - libgmock-dev
          - squashfs-tools
          - zsync
    - name: Configure git username
      become: True
      git_config:
        name: user.name
        value: "Matthew Fennell"
        scope: system
    - name: Configure git email
      become: True
      git_config:
        name: user.email
        value: "matthew.robert.fennell@gmail.com"
        scope: system
    - name: Download appimagetool
      get_url:
        url: https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        dest: /usr/local/bin/appimagetool
        owner: "{{ jenkins_user }}"
        mode: '500'
        force: true
  vars:
    user_to_create: "{{ jenkins_user }}"
    swap_file_size_mb: 4096
    pip_package: python3-pip
    pip_install_packages:
      - name: appimage-builder
  roles:
    - role: matthewrfennell.create-user
    - role: geerlingguy.swap
    - role: geerlingguy.pip
